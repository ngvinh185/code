Cho 2 số nguyên L, R, hãy đếm xem trong đoạn từ L tới R có bao nhiêu số nguyên tố.

Gợi ý :


Input Format

Dòng 1 là số bộ test T

T dòng tiếp theo mỗi dòng là 2 số nguyên không âm L, R

Constraints

1<=T<=10000

0<=L<=R<=10^6

Output Format

Đưa ra kết quả của mỗi test trên 1 dòng

Sample Input 0

5
3 19
4 65
4 44
1 17
1 7
Sample Output 0

7
16
12
7
4

#include<bits/stdc++.h>
using namespace std;
using ll=long long;
const int mod=1e9+7;
ll F[10000001];//luu so fibo thu i
int n=10000000;
void sang(){
    for(int i=0;i<n;i++){
        F[i]=1;
    }
    F[0]=F[1]=0;
    for(int i=2;i<=sqrt(n);i++){
        if (F[i]==1) {
            for(int j=i*i;j<=n;j+=i){
                F[j]=0;
            }
        }
    }
}
int a[10000001];//so so nguyen to tu 0->i
void prime(){
    sang();
    a[0]=a[1]=0;
    for(int i=2;i<=n;i++){
        if (F[i]) a[i]=a[i-1]+1;
        else a[i]=a[i-1];
    }
}
    
int main(){
    prime();
    int t;cin>>t;
    while (t--){
        int l,r;cin>>l>>r;
        if (l==0) cout<<a[r]<<endl;
        else cout<<a[r]-a[l-1]<<endl;
    }
}