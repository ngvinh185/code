Cho mảng A[] gồm N phần tử. Bạn được yêu cầu trả lời cho các truy vấn, mỗi truy vấn yêu cầu bạn đếm số các giá trị khác nhau từ chỉ số L tới chỉ số N - 1.

Gợi ý : Gọi F[i] là số lượng các giá trị khác nhau tính từ chỉ số i tới chỉ số n - 1 trong mảng, xây dựng trước mảng F[i], sau đó mỗi truy vấn chỉ cần truy cập vào F[l] là có thể tìm được số lượng các giá trị khác nhau từ l tới n - 1. Cách xây dựng mảng F[] là duyệt từ cuối về và dùng 1 set để lưu các giá trị khác nhau tính từ cuối, gán F[i] = set.size()

Input Format

Dòng đầu tiên là N - số lượng phần tử của mảng

Dòng thứ 2 gồm N phần tử A[i] của mảng

Dòng thứ 3 là số truy vấn Q

Q dòng tiếp theo mỗi dòng là một số L.

Constraints

1<=N<=1000000

1<=A[i]<=10^9

1<=Q<=10000

0<=L<=N-1

Output Format

Với mỗi truy vấn in kết quả trên 1 dòng.

Sample Input 0

9
3 3 3 4 2 0 3 1 2 
4
8
6
1
7
Sample Output 0

1
3
5
2

#include<bits/stdc++.h>
using namespace std;
using ll=long long;
const int mod=1e9+7;
bool cmp(pair<int,int> a,pair<int,int> b){
    return a.second<b.second;
}

    
int main(){
    int n;cin>>n;
    int a[n];
    for(int &x:a) cin>>x;
    set<int> se;
    int d[n];//luu cac so khac nhau tu i->n-1;
    for(int i=n-1;i>=0;i--){
        se.insert(a[i]);
        d[i]=se.size();
    }
    int q;cin>>q;
    while (q--){
        int l;cin>>l;
        cout<<d[l]<<endl;
        
    }
}